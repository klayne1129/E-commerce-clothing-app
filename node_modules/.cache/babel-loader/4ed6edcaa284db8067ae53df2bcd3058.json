{"ast":null,"code":"// function takes 2 parameters: all existing cartItems in cartItems array and the cartItem you want to add\n// 1. Create variable existingCartITems. \n// 2. Look inside existingCartItems to see if it already exists. if true it will return the first item found\n//    in the array based on the condition listed.\n// 3.  Check if existingCartItem exists. If yes, return cartItems.map so you can return a new array.\n//    Allows you to return new versions of the state so that the components know to re-render properly.\n// 4. If cartItem.id ===cartItemToAdd.id, create a new object where you have the cartItem\n//    and set quantity to cartITem.quantity + 1. If cartItem.id does not match cartItemToAdd.id, \n//    just return cartItem.\n// 5. if caritItem is not found inside the array, return a new array with all existing cartItems,\n//    and an object which is ...cartItemToAdd and a base quantity set to 1.\n//    This way whenever you add cart items in any subsequent cartItems will be able to refference\n//    that subsequent value that you have added to the objects when you store them.\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n  const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id);\n\n  if (existingCartItem) {\n    return cartItems.map(cartItem => cartItem.id === cartItemToAdd.id ? { ...cartItem,\n      quantity: cartItem.quantity + 1\n    } : cartItem);\n  }\n\n  return [...cartItems, { ...cartItemToAdd,\n    quantity: 1\n  }];\n};","map":{"version":3,"sources":["/Users/KatieLayne/Documents/react/zeroToMastery/clothing-app/src/redux/cart/cart.utils.js"],"names":["addItemToCart","cartItems","cartItemToAdd","existingCartItem","find","cartItem","id","map","quantity"],"mappings":"AACA;AAEA;AAEA;AACA;AAEA;AACA;AAEA;AACA;AACA;AAEA;AACA;AACA;AACA;AAEA,OAAO,MAAMA,aAAa,GAAG,CAACC,SAAD,EAAYC,aAAZ,KAA8B;AACvD,QAAMC,gBAAgB,GAAGF,SAAS,CAACG,IAAV,CAAeC,QAAQ,IAAIA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAAzD,CAAzB;;AAEA,MAAGH,gBAAH,EAAqB;AACjB,WAAOF,SAAS,CAACM,GAAV,CAAcF,QAAQ,IACzBA,QAAQ,CAACC,EAAT,KAAgBJ,aAAa,CAACI,EAA9B,GACE,EAAE,GAAGD,QAAL;AAAeG,MAAAA,QAAQ,EAAEH,QAAQ,CAACG,QAAT,GAAoB;AAA7C,KADF,GAEEH,QAHC,CAAP;AAKH;;AAED,SAAO,CAAC,GAAGJ,SAAJ,EAAe,EAAC,GAAGC,aAAJ;AAAmBM,IAAAA,QAAQ,EAAE;AAA7B,GAAf,CAAP;AACH,CAZM","sourcesContent":["\n// function takes 2 parameters: all existing cartItems in cartItems array and the cartItem you want to add\n\n// 1. Create variable existingCartITems. \n\n// 2. Look inside existingCartItems to see if it already exists. if true it will return the first item found\n//    in the array based on the condition listed.\n\n// 3.  Check if existingCartItem exists. If yes, return cartItems.map so you can return a new array.\n//    Allows you to return new versions of the state so that the components know to re-render properly.\n\n// 4. If cartItem.id ===cartItemToAdd.id, create a new object where you have the cartItem\n//    and set quantity to cartITem.quantity + 1. If cartItem.id does not match cartItemToAdd.id, \n//    just return cartItem.\n\n// 5. if caritItem is not found inside the array, return a new array with all existing cartItems,\n//    and an object which is ...cartItemToAdd and a base quantity set to 1.\n//    This way whenever you add cart items in any subsequent cartItems will be able to refference\n//    that subsequent value that you have added to the objects when you store them.\n\nexport const addItemToCart = (cartItems, cartItemToAdd) => {\n    const existingCartItem = cartItems.find(cartItem => cartItem.id === cartItemToAdd.id)\n\n    if(existingCartItem) {\n        return cartItems.map(cartItem => \n            cartItem.id === cartItemToAdd.id\n            ? { ...cartItem, quantity: cartItem.quantity + 1}\n            : cartItem\n            )\n    }\n\n    return [...cartItems, {...cartItemToAdd, quantity: 1}]\n}"]},"metadata":{},"sourceType":"module"}